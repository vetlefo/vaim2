# Database Configuration
# Note: For production, use a secrets management service like HashiCorp Vault, AWS Secrets Manager, or GCP Secret Manager
# These example values are for local development only
DB_HOST=auth-postgres
DB_PORT=5433  # Changed from 5432 to avoid conflicts
DB_USER=admin
DB_PASSWORD=admin  # In production, use a strong password stored in a secrets manager
DB_NAME=auth

# Neo4j Configuration
# Note: For production, use a secrets management service
NEO4J_URI=bolt://auth-neo4j:7688  # Changed from 7687 to avoid conflicts
NEO4J_USER=neo4j
NEO4J_PASSWORD=password123  # Minimum 8 characters required, use a strong password in production

# Application Configuration
PORT=3000
NODE_ENV=development  # Use 'production' in production environment

# JWT Configuration (Add in production)
JWT_SECRET=your-secret-key  # Store this in a secrets manager for production
JWT_EXPIRATION=24h

# Redis Configuration (Add in production)
# Note: For production, use a secrets management service
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=your-redis-password  # Use a strong password in production

# DeepSeek AI Configuration
# DEEPSEEK_API_KEY=  # Get key from https://platform.deepseek.com/api-keys

# SSL/TLS Configuration (Add in production)
# SSL_KEY_PATH=/path/to/ssl/key
# SSL_CERT_PATH=/path/to/ssl/certificate

# Rate Limiting (Add in production)
# RATE_LIMIT_WINDOW=15m
# RATE_LIMIT_MAX_REQUESTS=100

# Frontend Configuration
FRONTEND_URL=http://localhost:4200  # URL of the frontend application

# OAuth2 Configuration
OAUTH2_STATE_SECRET=your-state-secret  # Secret for OAuth2 state parameter
OAUTH2_ENABLED_PROVIDERS=google,github  # Comma-separated list of enabled providers

# Google OAuth2
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret
GOOGLE_CALLBACK_URL=http://localhost:3000/auth/oauth2/google/callback

# GitHub OAuth2
GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret
GITHUB_CALLBACK_URL=http://localhost:3000/auth/oauth2/github/callback
